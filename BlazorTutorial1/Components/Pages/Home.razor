@page "/"
@rendermode InteractiveServer
@inject BlazorTutorial1.IServices.IUserService userService

<PageTitle>Home</PageTitle>

<h1>Welcome @((MarkupString)userService.GetUserById(selectedUserId).FullName())</h1>

<label for="users">Select User:</label>
<select class="users" @onchange="OnUserSelected">
    @foreach(User user in @userService.GetUsers()){
        <option value=@user.UserId>@((MarkupString)user.FullName())</option>
    }
</select>
<br/>

<h2>User Settings</h2>
<br/>
<p>
    <UserEdit currentUser="@userService.GetUserById(selectedUserId)"></UserEdit>
</p>

@code
{
    private Guid selectedUserId;
    protected override void OnInitialized(){
        base.OnInitialized();
        User firstUser = userService.GetUsers().FirstOrDefault();
        if(firstUser != null) {
            selectedUserId = firstUser.UserId;
        }
        else {
            selectedUserId = Guid.Empty;
        }
        
    }
    public void OnUserSelected(ChangeEventArgs args){
        // To Avoid having to convert a nullable value from a string to a guid I look it up and then return the guid. 
        // TODO: DO this better. If the comparison fails I won't have a selected user.
        selectedUserId = Guid.Parse(args?.Value.ToString());
    }
}