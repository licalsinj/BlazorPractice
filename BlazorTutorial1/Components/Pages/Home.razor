@page "/"
@rendermode InteractiveServer

<PageTitle>User Management</PageTitle>

<h1>Welcome @((MarkupString)myUsers[@selectedUser].BuildDisplayName())</h1>

<label for="users">Change User:</label>
<select class="users" @onchange="OnUserSelected">
    @foreach(var user in @myUsers){
        <option value=@user.Key>@((MarkupString)user.Value.BuildDisplayName())</option>
    }
</select>
<br>
<h2>User Settings</h2>
<p>Set Italics: 
    <input type="checkbox" checked="@myUsers[selectedUser].isItalic" @oninput="ItalicChanged">
</p>
<p>Set Boldface: 
    <input type="checkbox" checked="@myUsers[selectedUser].isBold" @oninput="BoldChanged">
</p>
<p>Set Underlined: 
    <input type="checkbox" checked="@myUsers[selectedUser].isUnderline" @oninput="UnderlineChanged">
</p>
<p>Set Strikethrough: 
    <input type="checkbox" checked="@myUsers[selectedUser].isStrike" @oninput="StrikeChanged">
</p>

@code{
    private Dictionary<string,UserDecorations> myUsers = new Dictionary<string,UserDecorations>();
    private string selectedUser = "";
    // private bool isItalics = false;

    protected override void OnInitialized(){
        base.OnInitialized();
        // load up the users manually
        Console.WriteLine("OnInitialized() hit");
        myUsers.Add("Alice",new UserDecorations("Alice"));
        myUsers.Add("Bob",new UserDecorations("Bob"));
        myUsers.Add("Charlie",new UserDecorations("Charlie"));
        selectedUser = "Alice";
    }

    public void OnUserSelected(ChangeEventArgs args){
        selectedUser = args?.Value?.ToString();
    }

    public void ItalicChanged(ChangeEventArgs e){
        myUsers[selectedUser].isItalic = (bool)e.Value;
    }
    public void BoldChanged(ChangeEventArgs e){
        myUsers[selectedUser].isBold = (bool)e.Value;
    }
    public void UnderlineChanged(ChangeEventArgs e){
        myUsers[selectedUser].isUnderline = (bool)e.Value;
    }
    public void StrikeChanged(ChangeEventArgs e){
        myUsers[selectedUser].isStrike = (bool)e.Value;
    }

    public class UserDecorations{
        public string userName {get;set;}
        public bool isItalic {get;set;}
        public bool isBold {get;set;}
        public bool isUnderline {get;set;}
        public bool isStrike {get;set;}
        public UserDecorations(string name)
        {
            userName = name;
            isItalic = false;
            isBold = false;
            isUnderline = false;
            isStrike = false;
        }
        public string BuildDisplayName() {
            string returnName = this.userName;
            if(isItalic){
                returnName = "<i>" + returnName + "</i>"; 
            }
            if(isBold){
                returnName = "<b>" + returnName + "</b>"; 
            }
            if(isUnderline){
                returnName = "<u>" + returnName + "</u>"; 
            }
            if(isStrike){
                returnName = "<del>" + returnName + "</del>"; 
            }
            return returnName;
        }
    }
}